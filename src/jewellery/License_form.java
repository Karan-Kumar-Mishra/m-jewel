/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jewellery;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.TemporalAccessor;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class License_form extends javax.swing.JFrame {

    /**
     * Creates new form License_form
     */
    public License_form() {
        initComponents();
        setLocationRelativeTo(null);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int height = d.height - 146;
        int width = d.width - 275;
        jPanel1.setSize(width, height);
        long x = generateRandom();
        jTextField2.setText(Long.toString(x));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("ID :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("KEY :");

        jTextField2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Send Activation Request");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Generate new ID");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 153), new java.awt.Color(0, 204, 255), null, null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel3.setText("MINDSTEIN LICENSE KEY");

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Send Activation Request first and then contact the Admin at mndstechnology@gmail.com");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        long x = generateRandom();
        jTextField2.setText(Long.toString(x));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
//           C:\Program Files\Common Files\Oracle\Java\javapath
        
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            LocalDateTime now = LocalDateTime.now();
            String date = dtf.format(now);
            InetAddress ip = null;
            String Mac = null;
          
            Mac = getMAC();
         

            ip = InetAddress.getLocalHost();
//            JOptionPane.showMessageDialog(this, "enter to the action4");
            try (Connection c = DriverManager.getConnection("jdbc:mysql://69.57.172.244:3306/mindstein_licence", "mindstein_licence",
                    "v9qk@ZYFK$4u")) {
                Statement s = c.createStatement();
                String q = "INSERT INTO license_activation_requests(system_id,software,IP_address,MAC_address,created_at,updated_at) "
                        + "values('" + jTextField2.getText() + "','" + "Jewelry" + "','" + ip + "','" + Mac + "','" + date + "','" + date + "');";
                s.executeUpdate(q);
                JOptionPane.showMessageDialog(this, "The Activation Request has been successfully sent.");
                
                s.close();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "The Activation Request unsuccessful.check internet");
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String active_till;
        DateFormat dtf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date now = new Date();

        String date = dtf.format(now);

        String s1 = null;
        int plan = 0;
        String period = null;
        try {
//            Connection c = DriverManager.getConnection("jdbc:mysql://119.18.52.191:3306/mindstei_licence?enabledTLSProtocols=TLSv1.2",
//                    "mindstei_licence", "mindstein@0291@");
            Connection c = DriverManager.getConnection("jdbc:mysql://69.57.172.244:3306/mindstein_licence",
                    "mindstein_licence", "v9qk@ZYFK$4u");
            System.out.println("Connection done");
            Statement s = c.createStatement();
            String q = "Select * from license_act_comp_reqs where system_id='" + jTextField2.getText() + "';";
            ResultSet rs = s.executeQuery(q);
            while (rs.next()) {
                s1 = rs.getString("activation_key");
                plan = rs.getInt("plan");
                period = rs.getString("period");
            }
            if (s1 == null) {
                ImageIcon icon = new ImageIcon(License_form.class.getResource("/assets/icons8-close-window-48_1.png"));
                JOptionPane.showMessageDialog(
                        null,
                        "The provided ID or Key is wrong!!",
                        "Activation Failed", JOptionPane.INFORMATION_MESSAGE,
                        icon);
            } else {

                Calendar cal = Calendar.getInstance();

                cal.setTime(now);
                if (period.equals("day")) {
                    cal.add(Calendar.DATE, plan);
                } else {
                    cal.add(Calendar.MINUTE, plan);
                }
                Date currentDatePlusplan = cal.getTime();
                active_till = dtf.format(currentDatePlusplan);
                if (jTextField1.getText().equals(s1)) {

                    ImageIcon icon = new ImageIcon(License_form.class.getResource("/assets/icons8-ok-48.png"));
                    JOptionPane.showMessageDialog(
                            null,
                            "The Account has been activated!! \n Please restart to use all features.",
                            "Activation Successful", JOptionPane.INFORMATION_MESSAGE,
                            icon);
                    // JOptionPane.showMessageDialog(null, "The Account has been activated!! \n Please restart to use all features.");

                    try {
                        Connection c1 = DBConnect.connect();
                        Statement st = c1.createStatement();
                        st.execute("truncate table licence;");
                        st.clearBatch();
                        String query = "INSERT INTO licence values('" + jTextField2.getText() + "','" + jTextField1.getText() + "','" + plan + "','" + period + "','" + date + "','" + active_till + "')";
                        st.executeUpdate(query);

                        st.close();
                        c1.close();

                    } catch (SQLException e) {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(this, e);
                    }

                }
//                Connection c2 = DriverManager.getConnection("jdbc:mysql://119.18.52.191:3306/mindstei_licence?enabledTLSProtocols=TLSv1.2", "mindstei_licence", "mindstein@0291@");
                Connection c2 = DriverManager.getConnection("jdbc:mysql://69.57.172.244:3306/mindstein_licence",
                        "mindstein_licence", "v9qk@ZYFK$4u");
                System.out.println("Connection done");
                Statement s2 = c2.createStatement();
                String q2 = "Update license_act_comp_reqs set active_from='" + date + "' where system_id ='" + jTextField2.getText() + "' and activation_key='" + jTextField1.getText() + "';";
                String q3 = "Update license_act_comp_reqs set active_till='" + active_till + "' where system_id ='" + jTextField2.getText() + "' and activation_key='" + jTextField1.getText() + "';";

                s2.executeUpdate(q2);
                s2.executeUpdate(q3);
            }
            s.close();
            c.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    public static long generateRandom() {
        int length = 12;
        Random random = new Random();
        char[] digits = new char[length];
        digits[0] = (char) (random.nextInt(9) + '1');
        for (int i = 1; i < length; i++) {
            digits[i] = (char) (random.nextInt(10) + '0');
        }
        return Long.parseLong(new String(digits));
    }

    String getMAC() {
        String macAddress = "";
//        StringBuilder sb = new StringBuilder();
//        try {
//            InetAddress addr = InetAddress.getLocalHost();
//
//            NetworkInterface iface = NetworkInterface.getByInetAddress(addr);
//
//            byte[] mac = iface.getHardwareAddress();
//
//            for (int i = 0; i < mac.length; i++) {
//                sb.append(String.format(
//                        "%02X%s", mac[i],
//                        (i < mac.length - 1) ? "-" : ""));
//            }
//
//        } catch (UnknownHostException ex) {
//            Logger.getLogger(License_form.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SocketException ex) {
//            Logger.getLogger(License_form.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return sb.toString();
        try {
            Enumeration<NetworkInterface> networkInterfaces = NetworkInterface.getNetworkInterfaces();
            while (networkInterfaces.hasMoreElements()) {
                NetworkInterface ni = networkInterfaces.nextElement();
                byte[] hardwareAddress = ni.getHardwareAddress();
                if (hardwareAddress != null) {
                    String[] hexadecimalFormat = new String[hardwareAddress.length];
                    for (int i = 0; i < hardwareAddress.length; i++) {
                        hexadecimalFormat[i] = String.format("%02X", hardwareAddress[i]);
                    }
                    macAddress = String.join("-", hexadecimalFormat);
                }
            }
        } catch (SocketException ex) {
            Logger.getLogger(License_form.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
        System.out.println(macAddress);
        return macAddress;
    }

//    @Override
//    public void disable() {
//        DashBoardScreen ob = new DashBoardScreen();
//        ob.disableHomepage();
//    }
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new License_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
